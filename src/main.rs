use std::os::unix::thread;

use rand::seq::SliceRandom;
use rand::thread_rng;

const LEVELS: &[(&'static [(u8, u8)], u32)] = &[
    (&[(1, 50), (2, 40), (3, 10)], 1000),
    (&[(1, 35), (2, 20), (3, 20)], 2000),
    (&[(1, 30), (2, 20), (3, 20)], 3500),
    (&[(1, 20), (2, 30), (3, 20), (4, 2)], 5500),
    (&[(2, 40), (3, 35), (4, 10)], 8200),
    (&[(2, 50), (3, 40), (4, 10)], 12000),
    (&[(2, 40), (3, 35), (4, 10), (5, 2)], 13500),
    (&[(2, 30), (3, 20), (4, 20), (5, 2), (6, 2)], 17000),
    (&[(3, 40), (4, 20), (5, 15)], 18500),
    (&[(3, 30), (4, 20), (5, 20), (6, 2), (7, 1)], 23000),
    (&[(3, 50), (4, 40), (5, 10), (6, 2), (8, 2)], 28000),
    (&[(2, 50), (3, 40), (4, 10), (7, 2), (8, 2)], 32000),
    (&[(3, 40), (4, 20), (5, 25), (6, 2), (8, 1)], 38000),
    (&[(3, 50), (4, 40), (5, 10), (6, 2), (8, 1)], 42000),
    (&[(4, 50), (5, 35), (6, 18), (7, 3), (8, 2)], 50000),
    (&[(4, 35), (5, 35), (6, 18), (7, 3), (8, 2)], 56000),
    (&[(3, 50), (4, 40), (5, 10), (7, 3), (8, 2)], 62000),
    (&[(4, 35), (5, 30), (6, 20), (7, 3), (8, 2)], 70000),
    (&[(4, 50), (5, 40), (6, 10), (7, 3), (8, 2)], 75000),
    (&[(4, 30), (5, 20), (6, 20), (7, 3), (8, 2)], 85000),
    (&[(4, 40), (5, 25), (6, 10), (7, 3), (8, 2)], 100000),
    (&[(4, 25), (5, 20), (6, 20), (7, 3), (8, 2)], 999999),
];

fn main() {
    for level in 0..LEVELS.len() {
        println!("Level: {level}");
        let mut nums = Vec::new();
        for (n, c) in LEVELS[level].0 {
            for _ in 0..*c {
                nums.push(*n);
            }
        }

        nums.shuffle(&mut thread_rng());

        for y in 0..8 {
            for x in 0..8 {
                print!("{}", nums[y * 8 + x]);
            }
            println!();
        }
    }
}
